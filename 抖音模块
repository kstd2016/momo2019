let 封装API = require(engines.myEngine().cwd() +"/封装API.js");
let 集成模块 = require(engines.myEngine().cwd() +"/集成模块.js");





if(!requestScreenCapture()){
    toast("请求截图失败");
    exit();
};
开始();





function 开始(){
    手机判断参数 = 集成模块.手机品牌判断();
    全局变量()
    容错()
    for(let a=0;a<1;a++){
        循环变量()
        集成模块.流量卡切换IP(手机判断参数)
        封装API.等待(500);
        运行程序 = APP
        launchApp(运行程序)
        封装API.等待(5000)
        for(let b=0;b<random(50,99);b++){
            滑动换视频();
            封装API.等待(20000,40000);
            抖音点赞();
            封装API.等待(10000,20000);
            抖音关注();
        }
        集成模块.关闭应用(运行程序);
    }
};

function 全局变量(){    
    返回判断 = 0  //设置参数,更改无作用
    性别判断 = 0  //设置参数,更改无作用
    要求时间 = 60  //评论里关注用户的时间要求，该参数判断的为分钟
    要求年龄 = 1  //评论里关注用户的年龄要求
    喜欢数判断 = 1000  //大于喜欢数才开始运行关注,点赞代码
    点赞运行概率 = 1  //运行概率参数,1/参数概率运行
    好物推荐点赞参数 = 1  //0为不运行好物推荐代码 1为运行好物推荐代码
    关注运行概率 = 2  //运行概率参数,1/参数概率运行
    好物推荐关注参数 = 1  //0为不运行好物推荐代码 1为运行好物推荐代码
    APP = "抖音短视频"  //启动程序参数
    2
    /*
    昵称 = Array("稚与最初","风吹向你","遥林静居","柠檬爱恋","懒懒的幸福","各自安好","情定无名指","怀念小时候","悲情剧里的暖色系"
    ,"空心人","花开花落终不悔","飞逝的流水","拾起回忆","让眼泪倒流","亦久亦旧","生命的韧度","流哖中的浅夏","繁华的梦境","说好了再见"
    ,"给不起的温柔","一味执着的爱情","低调要沉默","不奢求爱情","太冷的回忆","四十五度的想念","却老了容颜","暖风撩人醉","TE听闻余生"
    ,"未尝没想过","庸人自扰梦","鹤隐","吟殇","耀月","简慕","岑寂","灼热","浅亡","梦你","矫情","独瘾","皱眉","温婉","挽发","诱惑","囚鸟"
    ,"叛逆","漠念","言初","孤身","孤刺","浪姬","酒客","如歌","念白","暖暖","温软","初心","南鸢","温茶","初遇","阑珊","花栀","遣心","落墨"
    ,"沉世","素颜","静谧")
    切换IP方式 = "光子切换IP"
    招呼话术 = Array("你好呀")
    招呼话术 = 招呼话术.split("|")
    引流号码 = 引流号码.split("|")
    评论回复话术 = 评论回复话术.split("|")
    自定义名字 = Array()
    分身起始 = parseInt(分身起始)
    分身结束 = parseInt(分身结束)
    for(let a=分身起始;a<分身结束+1;a++){
        自定义名字.push(APP+"分身"+a)
    }
    log(自定义名字)
    files.write("/sdcard/抖音话术.txt",招呼话术)
    files.append("/sdcard/抖音话术.txt","\n")
    files.append("/sdcard/抖音话术.txt",引流号码)
    */
};

function 循环变量(){
    私信回复参数 = 0
    评论关注参数 = 0
    私信回复数量 = random(20,25)
    评论关注数量 = random(40,60)
};

function 代码下载(){
    toastLog("开始下载抖音模块...")
    var url = 'https://raw.githubusercontent.com/kstd2016/momo2019/master/抖音模块.js'
    var r = http.get(url)
    log("code = " + r.statusCode);
    var html = r.body.bytes()
    files.writeBytes('./抖音模块.js', html)
    toastLog("抖音模块下载完成...")
};

function 滑动换视频(){
    toastLog("开始滑动换视频")
    主页判断()
    if(是否在评论页面()){
        back()
        封装API.等待(2000)
    }
    var 昵称A=0
    var 昵称B=0
    var 昵称控件 = id("title").findOne(1000)
    if(昵称控件!=null){
        var 昵称A = 昵称控件.text()
        log(昵称A)
    }
    随机上滑()
    封装API.等待(1000)
    var 昵称控件 = id("title").findOne(1000)
    if(昵称控件!=null){
        var 昵称B= 昵称控件.text()
        log(昵称B)
    }
    for(let a=0;a<10;a++){
        if(昵称A==昵称B){
            随机上滑()
            封装API.等待(1000)
            var 昵称控件 = id("title").findOne(1000)
            if(昵称控件!=null){
                var 昵称B= 昵称控件.text()
                log(昵称B)
            }
            if(昵称A!=昵称B){
                log("不一样")
                break;
            }
        }
        else{
            log("不一样")
            break;
        }
    }
};

function 抖音点赞(){
    主页判断();
    if(好物推荐点赞参数 == 1){
        var 条件参数 = textContains("¥").exists()&&textContains("已售").exists()
    }
    else if(好物推荐点赞参数 == 0){
        var 条件参数 = true
    }
    if(className("LinearLayout").clickable(true).descContains("喜欢").boundsInside(900,700,1080,1000).exists()){
        var 获取喜欢数 = className("LinearLayout").clickable(true).descContains("喜欢").boundsInside(900,700,1080,1000).findOne(1000).desc();
        var 喜欢 = 获取喜欢数.replace(/[^0-9]/ig,"");
        if(喜欢>喜欢数判断){
            toastLog("喜欢数大于1000");
            if(条件参数){
                if(1==random(1,点赞运行概率)){
                    toastLog("开始抖音点赞");
                    var 点赞 = className("LinearLayout").clickable(true).descContains("喜欢").boundsInside(900,700,1080,1000).findOne(1000);
                    封装API.setView(点赞).click();
                    封装API.等待(1000);
                    //////////备用代码
                    //click(random(950,1050),random(750,950));//点击点赞坐标
                };
            };
        };
    };
};

function 抖音关注(){
    主页判断();
    if(好物推荐关注参数 == 1){
        var 条件参数 = textContains("¥").exists()&&textContains("已售").exists()
    }
    else if(好物推荐关注参数 == 0){
        var 条件参数 = true
    }
    if(className("LinearLayout").clickable(true).descContains("喜欢").boundsInside(900,700,1080,1000).exists()){
        var 获取喜欢数 = className("LinearLayout").clickable(true).descContains("喜欢").boundsInside(900,700,1080,1000).findOne(1000).desc();
        var 喜欢 = 获取喜欢数.replace(/[^0-9]/ig,"");
        if(喜欢>喜欢数判断){
            toastLog("喜欢数大于1000");
            if(条件参数){
                if(1==random(1,关注运行概率)){
                    toastLog("开始抖音关注");
                    var 关注 = className("Button").clickable(true).descContains("关注").boundsInside(800,500,1080,900).findOne(1000);
                    封装API.setView(关注).click();
                    封装API.等待(1000,5000);
                };
            };
        };
    };
};

function 抖音留言(){
    主页判断()
    toastLog("开始抖音留言")
    if(1==random(1,8)){
        评论 = className("LinearLayout").clickable(true).descContains("评论").findOne(1000)
        封装API.setView(评论).click()
        封装API.等待(1000)
        设置评论 = className("EditText").clickable(true).findOne(1000)
        设置评论.setText("不错哟")
        封装API.等待(1000)
        封装API.setView(评论回复话术[random(0,评论回复话术.length-1)]).click()//点击评论弹出发送按钮
        封装API.等待(2000)
        发送评论 = className("ImageView").clickable(true).boundsInside(936,834,1056,948).findOne(1000)
        封装API.setView(发送评论).click()
        封装API.等待(2000)
        back();
    }
};

function 评论私信回复(){
    toastLog("开始评论私信回复")
    主页判断()
    评论 = className("LinearLayout").clickable(true).descContains("评论").findOne(1000)
    封装API.setView(评论).click()
    封装API.等待(1000)
    随机上滑()
    封装API.等待(1000)
    var 评论时间 = className("TextView").clickable(true).textContains("分⁠钟⁠前⁠").find()
    评论时间.forEach(element => {
        私信回复参数++
        封装API.setView(element).clickxy()
        封装API.等待(1000)
        封装API.text("私信回复").click()
        封装API.等待(1000)
        setText(私信回复话术[random(0,私信回复话术.length-1)])
        封装API.等待(1000)
        封装API.text("发送").click()
        封装API.等待(1000)
    });
    back()
    封装API.等待(2000)
};

function 评论关注(){
    性别判断 = 0
    toastLog("开始评论关注")
    主页判断()
    评论控件 = className("LinearLayout").clickable(true).descContains("评论").findOne(1000)
    封装API.setView(评论控件).click()
    封装API.等待(1000)
    for(let a=0;a<8;a++){
        if(text("评论并转发").exists()){
            back()         
        }
        随机上滑()
        封装API.等待(1000)
        var 评论时间 = classNameContains("TextView").textContains("刚⁠刚⁠").find()
        评论时间查找 = "刚刚"
        if(评论时间.length==0){
            var 评论时间 = className("TextView").textContains("分⁠钟⁠前⁠").find()
            评论时间查找 = "分钟前"
        }
        评论时间.forEach(评论 => {
            if(评论时间查找 == "分钟前"){
                str = 评论.text()
                var num= str.replace(/[^0-9]/ig,"");
                num = parseInt(num)
                log("时间等于"+num+"分钟前")
            }
            else if(评论时间查找 == "刚刚"){
                var num = 0
            }

            if(评论.parent()!=null&&num<要求时间){
                评论坐标 = 评论.parent().bounds()
                var X1 = 评论坐标.left
                var Y1 = 评论坐标.top
                var X2 = 评论坐标.right
                var Y2 = 评论坐标.bottom
                console.log(评论坐标);
                if(className("ImageView").boundsInside(X1,Y1,X2,Y2).exists() == true){
                    log("找到评论关注用户头像")
                    var 头像 =className("ImageView").clickable(false).boundsInside(X1,Y1,540,Y2).findOne(1000);
                    if(头像!=null){
                        头像坐标 = 头像.bounds().bottom
                        if(头像坐标<1750){
                            封装API.setView(头像).clickxy();
                        }
                    }
                    封装API.等待(1500)
                    年龄控件 = classNameContains("TextView").textContains("岁").findOne(1000)
                    if(年龄控件!=null){
                        年龄 = 年龄控件.text()
                        年龄  = 年龄 .substr(0,年龄 .length-1)
                        log(年龄)
                        if(年龄>=要求年龄){
                            //获取坐标
                            年龄坐标 = 年龄控件.bounds()
                            var X1 = 年龄坐标.left
                            var Y1 = 年龄坐标.top
                            var X2 = 年龄坐标.right
                            var Y2 = 年龄坐标.bottom
                            log(年龄坐标)
                            //在图片中找色
                            //男#08A2B5女#D94965
                            if(X2-X1>0&&Y2-Y1>0){
                                var point = findColor(captureScreen(),"#08A2B5", {
                                    region: [X1,Y1,X2-X1,Y2-Y1],
                                    threshold: 25
                               });
                               if(point){
                                   toastLog("找到啦");
                                   性别判断 = 1
                               }
                               else{
                                   toastLog("没找到");
                               }
                               //img.recycle();// 回收图片
                            }
                        }
                    }
                    else{
                        年龄控件 = classNameContains("TextView").text("男").findOne(1000)
                        if(年龄控件!=null){
                            性别判断 = 1
                            年龄 = 年龄控件.text()
                            log(年龄)
                        }
                        else{
                            年龄控件 = classNameContains("TextView").text("女").findOne(1000)
                            if(年龄控件!=null){
                                年龄 = 年龄控件.text()
                                log(年龄)
                            }
                        }
                    }
                    if(性别判断 == 1){
                        性别判断 = 0
                        评论关注参数++
                        log("评论关注数量"+评论关注参数)
                        var 关注 = className("Button").text("关注").findOne(1000);
                        封装API.setView(关注).click()
                        封装API.等待(1000)
                        if(text("知道了").exists()){
                            封装API.text("知道了").click()
                        }
                    }
                    封装API.desc("返回").click()
                    封装API.等待(1000)
                }
            }
        });
    }
    back()
    封装API.等待(2000)
};

function 主页判断(){
    while(!是否在首页()){
        封装API.等待(2000);
        back();
        返回判断++
        if(返回判断>=10){
            返回判断 = 0
            集成模块.关闭应用(运行程序)
            封装API.等待(2000);
            launchApp(运行程序)
            封装API.等待(10000)
        }
    }
};

function 是否在首页(){
    if(text("首页").exists()&&text("关注").exists()){
        log("找到首页...");
        return true;
    }
};

function 是否在我的页面(){
    if(text("编辑资料").exists()&&text("关注").exists()){
        log("找到我的页面...");
        return true;
    }
};

function 是否在评论页面(){
    if(textContains("条评论").exists()){
        log("找到评论页面...");
        return true;
    }
};

function 随机上滑(){
    let X1 = random(440,640);
    let Y1 = random(1500,1700);
    let X2 = random(440,640);
    let Y2 = random(300,500);
    let time = random(2000,4000)
    封装API.swipe(X1,Y1,X2,Y2,time);
};

function 容错(){
    thread = threads.start(function(){
        while(true){
            sleep(1000)
            if(textContains("继续播放").exists()){
                封装API.textCon("继续播放").click()
            }
            if(textContains("我知道了").exists()){
                封装API.textCon("我知道了").click()
            }
            if(textContains("不错过你的每一条私信").exists()&&textContains("取消").exists()){
                封装API.textCon("取消").click()
            }
            if(text("点击重播").exists()){
                toastLog("找到点击重播")
                滑动换视频()
            }
        }
    });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function 抖音注册(){
    launchApp("抖音");;
    for(let a=0;a<60;a++){
        sleep(1000)
        if(text("我").exists()){
            封装API.等待(2000);
            封装API.text("我").click();
        }
        if(text("密码登录").exists()){
            log("找到密码登陆控件,准备退出该循环")
            break;
        }
    }
    封装API.等待(1000);
    易码API = require('./易码API');
    登陆 = 易码API.登陆(易码账号,易码密码);
    封装API.等待(1000);
    获取号码 = 易码API.获取号码(登陆,"7732");
    log("获取的号码为===>"+获取号码)
    封装API.等待(1000);
    className("EditText").boundsInside(342,520,960,767).setText(获取号码);
    封装API.等待(500);
    封装API.text("获取验证码").click();
    for(let a=0;a<50;a++){
        封装API.等待(3000)
        if(接码模块()){}
        else if(className("EditText").boundsInside(342,520,960,767).exists()&&className("EditText").boundsInside(165,682,640,929).exists()){
            获取验证码 = 易码API.获取验证码(登陆,"7732",获取号码);
            封装API.等待(500)
            if(获取验证码=="获取验证码失败"){toastLog(获取验证码);}
            else if(获取验证码=="3001"){获取验证码 = 易码API.获取验证码(登陆,"7732",获取号码);}
            else{break;}
        }
        else{log("什么都没有找到...")}
    }
    封装API.等待(500);
    验证码 = 获取验证码.replace(/[^0-9]/ig,"");
    验证码 = 验证码.replace(/[^0-9]/ig,"");//筛选出内容里面的所有数字
    验证码 = 验证码.substr(0,4)//截取字符串从0位开始到第三位
    log(验证码)
    if(验证码=="3001"){}
    else{className("EditText").boundsInside(165,682,640,929).setText(验证码);}
    封装API.等待(500);
    封装API.textCon("我已阅读并同意").click()
    封装API.等待(500);
    登陆账号 = className("android.widget.Button").clickable(true).findOne(1000)
    封装API.setView(登陆账号).click()
    封装API.等待(2000)
    if(text("密码登录").exists()){
        log("找到密码登陆控件,仍旧在手机号注册界面")
        back();
        抖音注册();
        return
    }
    for(let a=0;a<20;a++){
        封装API.等待(1000)
        if(text("完善资料").exists()){
            封装API.等待(1000)
            className("EditText").boundsInside(318,811,912,879).setText(昵称[random(0,昵称.length-1)]);
            封装API.等待(1000)
            for(let a=0;a<random(1,2);a++){
                年龄滑动_年()
                封装API.等待(500,1000)
            }
            for(let a=0;a<random(1,5);a++){
                年龄滑动_月()
                封装API.等待(500,1000)
            }
            for(let a=0;a<random(1,5);a++){
                年龄滑动_日()
                封装API.等待(500,1000)
            }
            封装API.等待(1000)
            click(random(440,640),random(860,1060))
            封装API.等待(1000)
            //a = classNameContains("TextView").boundsInside(318,1115,912,1183).findOne(1000)
            //log(a)
            //a.click()
            //缺少选择性别滑动
            封装API.等待(1000)
            className("ImageView").clickable(true).findOne().click()
            封装API.等待(1000)
            封装API.text("相册选择").click()
            封装API.等待(2000)
            for(let a=0;a<20;a++){
                sleep(2000)
                if(text("预览").exists()==true){
                    for(let b=0;b<random(1,10);b++){
                        log(b)
                        scrollDown()
                        封装API.等待(1000);
                    }
                    封装API.等待(500)
                    var 图片集合 = className("android.view.View").clickable(true).find()
                    var 图片控件 = className("android.view.View").clickable(true).findOnce(random(0,图片集合.length))
                    封装API.setView(图片控件).click()
                    封装API.等待(1000)
                    if(text("确定").exists()==true){
                        封装API.text("确定").click()
                    }
                }
                else if(text("完成").exists()){
                    封装API.text("完成").click()
                    break;
                }
            }
            alert("完善")
            封装API.等待(9999)
            封装API.等待(2000)
            完善资料确认 = className("android.widget.Button").clickable(true).findOne(1000)
            封装API.setView(完善资料确认).click()
            封装API.等待(2000)
            if(text("完善资料").exists()){
                封装API.text("跳过").click()
            }

            //break;
        }
        else if(text("申诉").exists()){
            拉黑手机号 = 易码API.拉黑手机号(登陆,"7732",获取号码);
            log(拉黑手机号)
            break;
        }
        else if(className("EditText").id("ak8").exists()&&className("EditText").id("aoc").exists()){
            while(!是否在首页()){
                封装API.等待(1000);
                back();
            }
            抖音注册()
            break;
        }
    }
};

function 微博登陆(){
    launchApp("抖音");;
    封装API.text("我").click();
    封装API.等待(1000);
    封装API.id("db9").click()
    封装API.等待(2000);
    微博账号()
    //微博登陆账号
    log("微博账号===>"+微博数据[0])
    className("EditText").packageName("com.sina.weibo").id("etLoginUsername").setText(微博数据[0]);
    //微博登陆密码
    log("微博密码===>"+微博数据[1])
    className("EditText").packageName("com.sina.weibo").id("etPwd").setText(微博数据[1]);
    封装API.text("登录").click();
    封装API.等待(1000);
    封装API.text("确定").click();
};

function 微博账号(){
    微博数据 = []
    var 读取文本 = files.read("/sdcard/微博账号.txt");
    var 分割文本=读取文本.split("\n");
    var copyList=分割文本.slice(0);
    读取文本.split("\n").some(line=>{
        微博数据 = line.split("----")
        copyList.shift();
        files.write("/sdcard/微博账号.txt",copyList.join("\n"));
        return true
    })
};

function 抖音搜索用户关注(){
    主页判断()
    for(let a=0;a<10;a++){
        if(a == 0){
            封装API.text("首页").click();
            封装API.等待(1000);
            封装API.id("ap1").click();
        }
        封装API.等待(1000);
        className("EditText").id("aex").setText(random(1000,100000000));
        搜索框 = className("EditText").id("aex").findOne(1000);
        封装API.setView(搜索框).click();
        //点击输入法搜索按钮
        for(let a=0;a<3;a++){
            封装API.等待(1000)
            var point = findColor(captureScreen(), "#FF642B", {
                region: [880,1720,200,200],
                threads: 25
            });
            if(point){
                封装API.press(point.x,point.y,random(200,500));
                break;
            }
        }
        接码模块();
        封装API.等待(1000);
        关注 = id("b5v").findOne(1000);
        if(关注!=null){
            关注 = id("b5v").find();
            关注.forEach(关注 => {
                封装API.等待(500);
                封装API.setView(关注).click();
            });
        }
        else{
            关注 = text("关注").findOne(1000);
            if(关注!=null){
                关注 = text("关注").find()
                关注.forEach(关注 => {
                    封装API.等待(500);
                    封装API.setView(关注).click();
                });
            }
        }  
    }
};

function 抖音我页面私信(){
    toastLog("开始抖音私信...");
    while(!是否在首页()){
        back();
        封装API.等待(1000)
    }
    封装API.text("我").click()
    封装API.等待(2000)
    for(let a=0;a<15;a++){
        if(是否在我的页面){
            break;
        }
    }
    封装API.textCon("粉丝").click()
    封装API.等待(2000)
    for(let a=0;a<15;a++){
        var 私信用户 = className("RelativeLayout").clickable(true).find()
        私信用户.forEach(element => {
            消息判断 = 0
            用户判断 = ""
            a = element.children()
            a.forEach(function(child){
                if(child!=null){
                    if(child.text()=="已重置"){
                        用户判断 = "已重置"
                        log("已重置")
                    };
                }
            });
            if(用户判断 == "已重置"){}
            else{
                封装API.setView(element).click()
                封装API.等待(1000)
                var 私信图标 = className("LinearLayout").clickable(true).boundsInside(783,420,903,540).findOne(1500)
                if(私信图标==null){
                    var 私信图标 = className("ImageView").clickable(true).boundsInside(915,507,1035,627).findOne(1500)
                }
                封装API.setView(私信图标).click()
                封装API.等待(1000)
                for(let b=0;b<招呼话术.length;b++){
                    if(textContains(招呼话术[b]).exists()){
                        消息判断 = 1;
                    }
                    else{}
                }
                if(消息判断 == 1){
                    log("已经发送过招呼话术")
                }
                else{
                    setText(招呼话术[random(0,招呼话术.length-1)])
                    封装API.等待(1000)
                    封装API.desc("发送").click()
                    封装API.等待(1000)
                    for(let b=0;b<引流号码.length;b++){
                        setText(引流号码[b])
                        封装API.等待(1000)
                        封装API.desc("发送").click()
                        封装API.等待(1000)
                    }
                }
                封装API.desc("返回").click()
                封装API.等待(500)
                封装API.desc("返回").click()
                封装API.等待(1000)
            }
        });
        封装API.等待(500);
        captureScreen("/sdcard/A.png");
        封装API.等待(500);
        scrollDown()
        封装API.等待(1000);
        captureScreen("/sdcard/B.png");
        var templ1 = images.read("/sdcard/A.png");
        var templ2 = images.read("/sdcard/B.png");
        var p = findImage(templ1, templ2,{threshold:0.9});
        if(p){
            return;
        }
        else{
            log("没有找到底部")
        }
        templ1.recycle();// 回收图片
        templ2.recycle();// 回收图片
    }
};

function 年龄滑动_年() {
    let X1 = random(190,290);
    let Y1 = random(1450,1500);
    let X2 = random(190,290);
    let Y2 = random(1800,1900);
    let time = random(3000,5000)
    封装API.swipe(X1,Y1,X2,Y2,time);
};

function 年龄滑动_月() {
    let X1 = random(490,590);
    let Y1 = random(1450,1500);
    let X2 = random(490,590);
    let Y2 = random(1800,1900);
    let time = random(3000,5000)
    封装API.swipe(X1,Y1,X2,Y2,time);
};

function 年龄滑动_日() {
    let X1 = random(850,950);
    let Y1 = random(1450,1500);
    let X2 = random(850,950);
    let Y2 = random(1800,1900);
    let time = random(3000,5000)
    封装API.swipe(X1,Y1,X2,Y2,time);
};

function 接码模块(){
    if(desc("请完成下列验证后继续").exists()==true||text("请完成下列验证后继续").exists()==true){
        log("找到滑块,准备拼图...");
        接码成功 = 1;
        滑块按钮 = className("android.widget.Image").boundsInside(162,1140,345,1257).packageNameContains("com.ss.android.ugc.aweme").findOne(1000);
        if(滑块按钮!=null){
            滑块按钮坐标 = 滑块按钮.bounds();
            console.log("滑块按钮坐标===>"+滑块按钮坐标);
            var 滑块按钮坐标X1 = 滑块按钮坐标.left;
            var 滑块按钮坐标Y1 = 滑块按钮坐标.top;
                //滑块整体图片className("android.view.WebView").boundsInside(117,471,963,1449).packageNameContains("com.ss.android.ugc.aweme").findOne(1000)
                滑块 = className("android.view.View").boundsInside(162,651,918,1077).packageNameContains("com.ss.android.ugc.aweme").findOne(1000);
                if(滑块!=null){
                    滑块图片 = 滑块.bounds();
                    console.log("滑块图片坐标===>"+滑块图片);
                    var X1 = 滑块图片.left;
                    var Y1 = 滑块图片.top;
                    var X2 = 滑块图片.right;
                    var Y2 = 滑块图片.bottom;
                    var 联众打码API = require('./联众API');
                    var 联众打码api = new 联众打码API("kstd2016","Wentao1987223");
                    坐标 = 联众打码api.打码(X1,Y1,X2-X1,Y2-Y1,"1318","1","1");
                    if(坐标 != "打码失败"){
                        log("联众打码坐标===>"+坐标);
                        拼图坐标 = 坐标.split(",");
                        拼图坐标X = parseInt(拼图坐标[0]);
                        拼图坐标Y = parseInt(拼图坐标[1]);
                        if(滑块按钮坐标X1>="100"&&滑块按钮坐标X1<="200"){
                            封装API.swipe(滑块按钮坐标X1+10,滑块按钮坐标Y1+10,滑块按钮坐标X1+拼图坐标X+random(15,25),滑块按钮坐标Y1+10+random(0,10),random(1500,3000));
                        }
                        else{
                            log("没有找到滑块按钮坐标,启用备用坐标...");
                            封装API.randomSwipe(172,1150,拼图坐标X+random(15,25),1150+random(0,10));
                        }
                    }
                    else{}//封装API.idCon("reload").click()//刷新按钮,更换图片
                }
                else{}//封装API.idCon("reload").click()//刷新按钮,更换图片             
        }
        else{}//封装API.idCon("reload").click()
        return true
    }
    else if(packageNameContains("com.ss.android.ugc.aweme").textContains("点击").exists()==true||packageNameContains("com.ss.android.ugc.aweme").descContains("点击").exists()==true){
        log("找到点击图片验证...")
        滑块 = classNameContains("android.webkit.WebView").boundsInside(117,557,963,1362).findOne(1000)
        if(滑块!=null){
            162,737,918,1163
            滑块图片 = 滑块.bounds()
            console.log(滑块图片);
            var X1 = 滑块图片.left
            var Y1 = 滑块图片.top
            var X2 = 滑块图片.right
            var Y2 = 滑块图片.bottom
            var 联众打码API = require('./联众API');
            var 联众打码api = new 联众打码API(联众账号,联众密码);
            坐标 = 联众打码api.打码(X1+40,Y1,X2-X1-40,Y2-Y1-200,"1303","1","5");
            log(坐标)
            拼图坐标 = 坐标.split("|")
            文字点击坐标=[]
            for(let a=0;a<拼图坐标.length;a++){
                封装API.等待(500)
                文字点击坐标[a] = 拼图坐标[a].split(",")
                封装API.press(X1+40+parseInt(文字点击坐标[a][0]),Y1+parseInt(文字点击坐标[a][1]),200)
            }
            封装API.等待(1000)
            确认 = className("android.widget.Button").clickable(true).desc("确认").findOne(1000)
            if(确认==null){
                确认 = className("android.widget.Button").clickable(true).text("确认").findOne(1000)
            }
            封装API.setView(确认).clickxy()
        }
        return true
    }
    else{return false}
};
